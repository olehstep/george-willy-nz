<!DOCTYPE html>
<html lang="{{ request.locale.iso_code }}">
<head> 
    <script src="https://www.googleoptimize.com/optimize.js?id=OPT-KH28GVK"></script>
  <script>
if(window.location.href.indexOf('au.georgeandwilly.com')>-1){
(function(g,e,o,t,a,r,ge,tl,y,s){
g.getElementsByTagName(o)[0].insertAdjacentHTML('afterbegin','<style id="georedirect1673403430052style">body{opacity:0.0 !important;}</style>');
s=function(){g.getElementById('georedirect1673403430052style').innerHTML='body{opacity:1.0 !important;}';};
t=g.getElementsByTagName(o)[0];y=g.createElement(e);y.async=true;
y.src='https://geotargetly-api-1.com/gr?id=-NLTbU9w7cKDEZieoWyO&refurl='+g.referrer+'&winurl='+encodeURIComponent(window.location);
t.parentNode.insertBefore(y,t);y.onerror=function(){s()};
georedirect1673403430052loaded=function(redirect){var to=0;if(redirect){to=5000};
setTimeout(function(){s();},to)};
})(document,'script','head');
}else{
(function(g,e,o,t,a,r,ge,tl,y,s){
g.getElementsByTagName(o)[0].insertAdjacentHTML('afterbegin','<style id="georedirect1673403531691style">body{opacity:0.0 !important;}</style>');
s=function(){g.getElementById('georedirect1673403531691style').innerHTML='body{opacity:1.0 !important;}';};
t=g.getElementsByTagName(o)[0];y=g.createElement(e);y.async=true;
y.src='https://geotargetly-api-1.com/gr?id=-NLTbrymqr9r8CE1NQHA&refurl='+g.referrer+'&winurl='+encodeURIComponent(window.location);
t.parentNode.insertBefore(y,t);y.onerror=function(){s()};
georedirect1673403531691loaded=function(redirect){var to=0;if(redirect){to=5000};
setTimeout(function(){s();},to)};
})(document,'script','head');
}
</script>
  <script src="https://cdn.intelligems.io/b34e87ab9d4e.js"></script>

  <link rel="preload" href="{{ 'styles.css' | asset_url }}" as="style">
  {% render 'head-tag' %}
  
  <!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-PXL2JR6');</script>
<!-- End Google Tag Manager -->

<!-- Global site tag (gtag.js) - Google Ads: 708650283 -->
<script async src="https://www.googletagmanager.com/gtag/js?id=AW-708650283"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'AW-708650283', {'allow_enhanced_conversions': true});
</script>
  
  <!-- Symmetry 5.4.1 -->

  

  <title>
    {{ page_title }}{% if current_tags %}{% assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags }}{% endif %}{% if current_page != 1 %} &ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif %}{% unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless %}
  </title> 

  {% render 'social-meta-tags' %}

  {{ 'styles.css' | asset_url | stylesheet_tag }}
  {{ 'custom.css' | asset_url | stylesheet_tag }}


  <script>
    window.theme = window.theme || {};
    theme.money_format_with_product_code_preference = {% if settings.product_currency_code_enabled %}{{ shop.money_with_currency_format | json }}{% else %}{{ shop.money_format | json }}{% endif %};
    theme.money_format_with_cart_code_preference = {% if settings.cart_currency_code_enabled %}{{ shop.money_with_currency_format | json }}{% else %}{{ shop.money_format | json }}{% endif %};
    theme.money_format = {{ shop.money_format | json }};
    theme.strings = {
      previous: {{ 'general.accessibility_labels.previous' | t | json }},
      next: {{ 'general.accessibility_labels.next' | t | json }},
      addressError: {{ 'map.errors.address_error' | t | json }},
      addressNoResults: {{ 'map.errors.address_no_results' | t | json }},
      addressQueryLimit: {{ 'map.errors.address_query_limit_html' | t | json }},
      authError: {{ 'map.errors.auth_error' | t | json }},
      icon_labels_left: {{ 'general.icon_labels.left' | t | escape | json }},
      icon_labels_right: {{ 'general.icon_labels.right' | t | escape | json }},
      icon_labels_down: {{ 'general.icon_labels.down' | t | escape | json }},
      icon_labels_close: {{ 'general.icon_labels.close' | t | escape | json }},
      icon_labels_plus: {{ 'general.icon_labels.plus' | t | escape | json }},
      cart_terms_confirmation: {{ 'cart.terms.confirmation' | t | json }},
      products_listing_from: {{ 'products.listing.from' | t | json }},
      layout_live_search_see_all: {{ 'layout.live_search.see_all' | t | json }},
      products_product_add_to_cart: {{ 'products.product.add_to_cart' | t | json }},
      products_variant_no_stock: {{ 'products.variant.no_stock' | t | json }},
      products_variant_non_existent: {{ 'products.variant.non_existent' | t | json }},
      products_product_pick_a: {{ 'products.product.pick_a' | t | json }},
      products_product_unit_price_separator: {{ 'products.product.unit_price_separator' | t | json }},
      general_navigation_menu_toggle_aria_label: {{ 'general.navigation.menu_toggle_aria_label' | t | json }},
      general_accessibility_labels_close: {{ 'general.accessibility_labels.close' | t | json }},
      products_added_notification_title: {{ 'products.added_notification.title' | t | json }},
      products_added_notification_item: {{ 'products.added_notification.item' | t | json }},
      products_added_notification_unit_price: {{ 'products.added_notification.unit_price' | t | json }},
      products_added_notification_quantity: {{ 'products.added_notification.quantity' | t | json }},
      products_added_notification_total_price: {{ 'products.added_notification.total_price' | t | json }},
      products_added_notification_shipping_note: {{ 'products.added_notification.shipping_note' | t | json }},
      products_added_notification_keep_shopping: {{ 'products.added_notification.keep_shopping' | t | json }},
      products_added_notification_cart: {{ 'products.added_notification.cart' | t | json }},
      products_product_adding_to_cart: {{ 'products.product.adding_to_cart' | t | json }},
      products_product_added_to_cart: {{ 'products.product.added_to_cart' | t | json }},
      products_added_notification_subtotal: {{ 'products.added_notification.subtotal' | t | json }},
      products_labels_sold_out: {{ 'products.labels.sold_out' | t | json }},
      products_labels_sale: {{ 'products.labels.sale' | t | json }},
      products_labels_percent_reduction: {{ 'products.labels.percent_reduction' | t: amount: '[[ amount ]]' | json }},
      products_labels_value_reduction_html: {{ 'products.labels.value_reduction_html' | t: amount: '[[ amount ]]' | json }},
      products_product_preorder: {{ 'products.product.preorder' | t | json }},
      general_quick_search_pages: {{ 'general.quick_search.pages' | t | json }},
      general_quick_search_no_results: {{ 'general.quick_search.no_results' | t | json }},
      collections_general_see_all_subcollections: {{ 'collections.general.see_all_subcollections' | t | json }}
    };
    theme.routes = {
      search_url: '{{ routes.search_url }}',
      cart_url: '{{ routes.cart_url }}',
      cart_add_url: '{{ routes.cart_add_url }}',
      cart_change_url: '{{ routes.cart_change_url }}',
      predictive_search_url: '{{ routes.predictive_search_url }}'
    };
    theme.settings = {
      cart_type: {{ settings.cart_type | json }},
      quickbuy_style: {{ settings.quickbuy_style | json }},
      avoid_orphans: {{ settings.avoid_orphans | json }}
    };
    document.documentElement.classList.add('js');
  </script>

  {%- if settings.swatch_enabled and settings.swatch_value_list != blank -%}
    <style>
      {%- assign swatch_lines = settings.swatch_value_list | newline_to_br | strip_newlines | split: '<br />' -%}
      {%- for line in swatch_lines -%}
        {%- assign line_split = line | split: ':' -%}
        {%- if line_split.last contains '#' -%}
          [data-swatch="{{ line_split.first | replace: '"', '' | downcase }}"] { --swatch-background-color: {{- line_split.last -}} }
        {%- else -%}
          [data-swatch="{{ line_split.first | replace: '"', '' | downcase }}"] { --swatch-background-image: url({{- line_split.last | strip | file_img_url: '128x128', crop: settings.swatch_crop_align -}}) }
        {%- endif -%}
      {%- endfor -%}
    </style>
  {%- endif -%}

  



{% include 'gwa-hreflang' %}{{ content_for_header }}

  <link rel="stylesheet" href="https://use.typekit.net/xvf7ybq.css">

{%- if request.path == '/collections/vendors' and collection.all_products_count == 0 -%}
<meta name="robots" content="noindex">
{%- endif -%}


  {% render 'shogun-head' %}
</head>

<body class="template-{{ template | split: '.' | first | handle }}
    {%- if template.suffix %} template-suffix-{{ template.suffix }}{% endif -%}
    {%- if settings.swatch_enabled %} swatch-method-{{ settings.swatch_method }} swatch-style-{{ settings.swatch_style }}{% endif -%}
    " data-cc-animate-timeout="0">

  {%- if settings.animations_enabled_desktop -%}
    <script>
      if ('IntersectionObserver' in window) {
        document.body.classList.add("cc-animate-enabled");
      }
    </script>
  {%- endif -%}

  <a class="skip-link visually-hidden" href="#content">{{ 'general.accessibility_labels.skip_to_content' | t }}</a>

  {% section 'announcement-bar' %}
  {% section 'header' %}
  {% section 'store-messages' %}

  <main id="content" role="main">
    <div class="container cf">

      {{ content_for_layout }}

    </div><!-- /.container -->
  </main><!-- /#content -->

  {% if request.path != '/challenge' %}
    <div id="pagefooter">
      {% section 'cross-page-promos' %}
      {% section 'footer' %}
    </div>

    {% section 'popup' %}
  {% endif %}

  {{ 'vendor.min.js'  | asset_url | script_tag }}
  {{ 'theme.js'  | asset_url | script_tag }}
  
  <script type="text/javascript">!function(e,t,n){function a(){var e=t.getElementsByTagName("script")[0],n=t.createElement("script");n.type="text/javascript",n.async=!0,n.src="https://beacon-v2.helpscout.net",e.parentNode.insertBefore(n,e)}if(e.Beacon=n=function(t,n,a){e.Beacon.readyQueue.push({method:t,options:n,data:a})},n.readyQueue=[],"complete"===t.readyState)return a();e.attachEvent?e.attachEvent("onload",a):e.addEventListener("load",a,!1)}(window,document,window.Beacon||function(){});</script>
<script type="text/javascript">window.Beacon('init', '22eb2e10-7c0b-4ee9-9c8d-c1d982409c30')</script>
  
  <script src="https://a.klaviyo.com/media/js/onsite/onsite.js"></script>
<script>
    var klaviyo = klaviyo || [];
    klaviyo.init({
      account: "XBUGKP",
      platform: "shopify"
    });
    klaviyo.enable("backinstock",{
    trigger: {
      product_page_text: "Notify Me When Available",
      product_page_class: "btn",
      product_page_text_align: "center",
      product_page_margin: "5px",
      replace_anchor: false
    },
    modal: {
     headline: "{product_name}",
     body_content: "Register to receive a notification when this item comes back in stock.",
     email_field_label: "Email",
     button_label: "Notify me when available",
     subscription_success_label: "You're in! We'll let you know when it's back.",
     footer_content: '',
     additional_styles: "@import url('https://fonts.googleapis.com/css?family=Helvetica+Neue');",
     drop_background_color: "#000",
     background_color: "#fefbf4",
     text_color: "#3e5843",
     button_text_color: "#fefbf4",
     button_background_color: "#2e4737",
     close_button_color: "#ccc",
     error_background_color: "#fcd6d7",
     error_text_color: "#C72E2F",
     success_background_color: "#2e4737",
     success_text_color: "#fefbf4"
    }
  });
</script>
  <style>
    
        .jdgm-star {
          background-position: 0 0;
          background-repeat: no-repeat;
          width: 13px;
          height: 13px;
          background-size: contain;
          display: inline-block !important;
          box-sizing: border-box;
          padding: 0 !important;
          margin-right: 2px !important;
        }
        
        .jdgm-star:before {
          content: "" !important;
        }
        
     .jdgm-star.jdgm--on {
          background-image: url("https://cdn.shopify.com/s/files/1/0600/6584/1310/files/full-star.png?v=1655859250");
        } 
        
        .jdgm-star.jdgm--off {
          background-image: url("https://cdn.shopify.com/s/files/1/0600/6584/1310/files/Empty-star.png?v=1655859250 ");
        }
        
        .jdgm-star.jdgm--half {
          background-image: url("https://cdn.shopify.com/s/files/1/0600/6584/1310/files/half-star.png?v=1655859250");
        }
        
        .jdgm-prev-badge:not([data-number-of-reviews="0"]) {
          display: flex !important;
          align-items: center !important;
        }
        
        .jdgm-prev-badge__text {
          font-size: 0.8em !important;
          line-height: 1 !important;
          margin-left: 5px !important;
        } 
    .jdgm-rev__icon {
    display: none !important;
}
   
      </style>


  
  <!-- view item list dataLayer push -->

  <script>

    var itemsArray = []

  </script>



  {% if request.page_type == 'collection' %}
    
    {% for product in collection.products %}

    <script>

        var product = '{{ product.title }}'
        var price = '{{ product.price | money_without_currency | replace:',','.'}}'
        var id = '{{ product.id }}'
        var itemListName = '{{ collection.title }}'
        var shop = '{{ shop.name }}'
        var itemListId = '{{ collection.id }}'
        

        var ecomObject = {

          'item_id': id,
          'item_name': product,
          'price': price,
          'item_list_name': itemListName,
          'item_list_id': itemListId,
          'item_brand': shop

          
        }

      itemsArray.push(ecomObject)


    </script>

    {% endfor %}

  <script>
  window.dataLayer = window.dataLayer || [];
  window.dataLayer.push({
    'event': 'view_item_list',
    'ecommerce': {
      'items': itemsArray
    }
  });
</script>
  
  {% endif %}







  
    <!---- view_cart dataLayer event push ---->


   <script>

    var cartItemsArray = []
    
  </script>

  


  
  {% if request.page_type == 'cart' %}
  {% if cart.empty? == false %}

  {% for product in cart.items %}
    <script>

      var cartProduct = '{{ product.title }}'
      var cartPrice = '{{ product.original_price | money_without_currency | replace:',','.'}}'
      var cartProductId = '{{ product.id }}'
      var cartBrand = '{{ product.vendor }}'
      var cartProductVariant = "{{ product.variant.title }}"

      var cartObject = {

        'item_name': cartProduct,
        'item_id': cartProductId,
        'price': cartPrice,
        'item_brand': cartBrand,
        'item_variant': cartProductVariant

      }

      cartItemsArray.push(cartObject)

    </script>
  {% endfor %}

    <script>


  window.dataLayer = window.dataLayer || [];
  window.dataLayer.push({
    'event': 'view_cart',
    'ecommerce': {

      'items': cartItemsArray
      
    }
  });

    

  </script>
  
  {% endif %}
  {% endif %}


   <!---- view_item event for GA4 ----> 


    <script>

    var pageType = '{{ product.title }}'
    console.log(pageType)

    var productsItemsArray = []
    
  </script>

  
  {% if request.page_type == 'product' %}

    <script>
      
      var actualProduct = '{{ product.title }}'
      var actualProductPrice = '{{ product.price | money_without_currency | replace:',','.'}}'
      var actualProductId = '{{ product.id }}'
      var actualProductBrand = '{{ shop.name }}'
      var actualProductCategory = '{{ product.type }}'

      var productObject = {

        'item_name': actualProduct,
        'item_id': actualProductId,
        'price': actualProductPrice,
        'item_brand': actualProductBrand,
        'item_category': actualProductCategory

      }

      productsItemsArray.push(productObject)

    </script>

    <script>


  window.dataLayer = window.dataLayer || [];
  window.dataLayer.push({
    'event': 'view_item_event',
    'ecommerce': {

      'items': productsItemsArray
      
    }
  });

    

  </script>
  
  {% endif %}





{% if template == 'index' %}
  <style>
.slick-prev:before {
    display: none;
}
  .slick-next:before {
    display: none;
}
    .slick-prev:hover, .slick-prev:focus, .slick-next:hover, .slick-next:focus {
    color: #3e5843;
   
}
    </style>
  {% endif %}

  
	{% render 'cf-implementations' %}

  {% comment %}
 <script type="text/javascript">
  window._mfq = window._mfq || [];
  (function() {
    var mf = document.createElement("script");
    mf.type = "text/javascript"; mf.defer = true;
    mf.src = "//cdn.mouseflow.com/projects/dff5b7a6-5438-4d71-b7dc-885a957f263f.js";
    document.getElementsByTagName("head")[0].appendChild(mf);
  })();
 </script>
  {% endcomment %}
  <script>
    if(window.location.href.indexOf('au.georgeandwilly.com')>-1){
      document.getElementById('change-location-link').setAttribute("onClick","javascript: gt_redirectselector_1673403430052_open();");
    }
  </script>
</body>
  <script type="text/javascript" defer>var script_loaded=!1;function loadJSscripts(){script_loaded||(void 0!==observer&&observer.disconnect(),void 0!==window.yett&&window.yett.unblock(),script_loaded=!0,document.querySelectorAll("iframe[data-src], script[data-src]").forEach(e=>{datasrc=e.dataset.src,null!=datasrc&&(e.src=datasrc)}),document.querySelectorAll("link[data-href]").forEach(e=>{datahref=e.dataset.href,null!=datahref&&(e.href=datahref)}),document.querySelectorAll("script[type='text/lazyload']").forEach(e=>{var t=document.createElement("script");for(a=0;a<e.attributes.length;a++){var r=e.attributes[a];t.setAttribute(r.name,r.value)}t.type="text/javascript",t.innerHTML=e.innerHTML,e.parentNode.insertBefore(t,e),e.parentNode.removeChild(e)}),document.dispatchEvent(new CustomEvent("asyncLazyLoad")))}var activityEvents=["mousedown","mousemove","keydown","scroll","touchstart","click","keypress","touchmove"];activityEvents.forEach(function(e){window.addEventListener(e,loadJSscripts,!1)});</script>
</html>
